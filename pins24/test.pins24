var seed=1
fun random()=seed=seed*1664525+1013904223,seed

var arr=100*0

fun quicksort(arraddr,n)=
	let
		var cmps=0
		fun sort(m,n)=
			let
				var i=0 var j=0 var v=0 var tmp=0 var apart=0
			in
				if n>m then
					i=m-1,j=n,v=(arraddr+n*4)^,apart=1,
					while apart do
						i=i+1,while (arraddr+i*4)^<v do
							i=i+1,cmps=cmps+1
						end,cmps=cmps+1,
						j=j-1,while (arraddr+j*4)^>v do
							j=j-1,cmps=cmps+1
						end,cmps=cmps+1,
						if i>=j then apart=0 else
							tmp=(arraddr+i*4)^,
							(arraddr+i*4)^=(arraddr+j*4)^,
							(arraddr+j*4)^=tmp
						end
					end,
					tmp=(arraddr+i*4)^,
					(arraddr+i*4)^=(arraddr+n*4)^,
					(arraddr+n*4)^=tmp,
					sort(m,j),sort(i+1,n)
				end,
				cmps
			end
	in
		sort(0,n-1)
	end

fun main()=
	let
		var n=0
		var arr=0
		var i=0
		var r=0
		var cmps=0
	in
		n=100,#getint(),
		arr=new(n*4),
		i=0,while i<n do
			r=random(),
			if r<0 then r=-r end,
			r=r%50,
			(arr+4*i)^=r,
			i=i+1
		end,
		putstr("UNSORTED : \00"),
		i=0,while i<n do
			putint((arr+4*i)^),
			if i<(n-1) then putstr(",\00") end,
			i=i+1
		end,putstr("\n\00"),
		putstr("*** QUICKSORT *** \00"),
		cmps=quicksort(arr,n),
		putint(cmps),putstr("\n\00"),
		putstr("SORTED   : \00"),
		i=0,while i<n do
			putint((arr+4*i)^),
			if i<(n-1) then putstr(",\00") end,
			i=i+1
		end,putstr("\n\00"),
		del(arr),
		0
	end

fun exit(exitcode)
fun getint()
fun putint(intvalue)
fun getstr(straddr)
fun putstr(straddr)
fun new(size)
fun del(addr)
